package com.skilldistillery.jpasmoochyzoo.data;

import com.skilldistillery.jpasmoochyzoo.entities.Animal;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.Query;

public class AnimalDAOImpl implements AnimalDAO
{
	EntityManagerFactory emf =
	        Persistence.createEntityManagerFactory("SmoochyZoo");
	

	@Override
	public Animal addAnimal(Animal animal)
	{
		EntityManager em = emf.createEntityManager();
		
		// start the transaction
		em.getTransaction().begin();
		// write the actor to the database
		em.persist(animal);
		// update the "local" Actor object
		em.flush();
		// commit the changes (actually perform the operation)
		em.getTransaction().commit();
		
		// return the Actor object
		System.out.println(animal.toString());
		
		em.close();
		return animal;
		
	} // end add animal
	
	public Animal findAnimalById(int id)
	{
		EntityManager em = emf.createEntityManager();
		Animal animal = null;
		
		animal = em.find(Animal.class, id);
		
		return animal;
		
	}
	
	public Animal updateAnimal(Animal animal)
	{
		EntityManager em = emf.createEntityManager();
		
		if (animal == null)
		{
			return null;
		}
		
		// start the transaction
		em.getTransaction().begin();
		// write the actor to the database
		em.persist(animal);
		// update the "local" Actor object
		em.flush();
		// commit the changes (actually perform the operation)
		em.getTransaction().commit();
		
		// return the Actor object
		System.out.println(animal.toString());
		
		em.close();
		return animal;
		
	} // end update animal
}
